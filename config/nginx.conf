# upstream group
    upstream rogue1 {
      server 127.0.0.1:8000; # using IP rather than localhost because python script expects it
    }

# http server
    server {
        listen 80;
        server_name localhost;
        return 301 https://localhost$request_uri; # permanent redirect to 443
    }

# https server (using session_cache to optimize SSL requests)
     server {
         listen                     443 ssl;
         server_name                localhost;
         client_max_body_size       30m;
         keepalive_timeout          70;
         access_log                 /var/log/nginx/access.log  main;

         ssl_session_cache          shared:SSL:10m;
         ssl_session_timeout        10m;
         ssl_certificate            /etc/ssl/certs/self-signed.crt;
         ssl_certificate_key        /etc/ssl/certs/self-signed.key;
         ssl_protocols              TLSv1.2;
         ssl_prefer_server_ciphers  on;
         ssl_ciphers                ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384; # per cipherli.st to comply with SSL Labs test

         location / {
             proxy_set_header     Host              $host;
             proxy_set_header     X-Real-IP         $remote_addr; # client IP
             proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for; # combines remote_address and proxy_address
             proxy_set_header     X-Forwarded-Proto $scheme; # logs the protocol between proxy and client
             proxy_pass           http://rogue1$request_uri; # sends the request onto the upstream group
         }
    }
